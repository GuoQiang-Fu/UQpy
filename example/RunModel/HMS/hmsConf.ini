[Broker]
### MDS: What is the previous line for?

### MDS: What do the options do here?
### MDS: Custom - Output filter can set a flag on modelPackage to clean up specific directories. OutputFilter does cleanup.
### MDS: Fixed - Keeps only the most recent CleanupFixedSize sets of files
# Cleanup policy for broker
# Values: None, Custom, Fixed
Cleanup = None 
#CleanupFixedSize = 5

### MDS: What are the options here?
### MDS: Host that the broker runs on. localhost is the same host as the upper-scale model. 
### MDS: Can be any hostname. Can run broker on a remote machine.
# Hosts of brokers - a broker is launched on each of these hosts to
# facilitate lower scale model evaluations
Hosts = localhost 

### MDS: This is the path to the hms library. 
# Path to libraries loaded by broker in order to deserialize objects
Library = /usr/cta/unsupported/hms/ken/hms/lib/python3.7/site-packages/_hms.so

### MDS: What is a "monitor"?
### MDS: Only option is Basic. Responsible for checking status of running jobs 
# Monitor type
# Values: Basic
Monitor = Basic

### MDS: This is the directory to place all model evaluations
# Path where model scripts are stored and executed
OutputDirectory = /p/home/shields/LS-DYNA_model/f01_vy10_vx5

### MDS: What are the options here?
### MDS: Many options. Resources that are available for the lower-scale model to run on.
### MDS: To run on multiple CPUs (resources), 1. change ResourceTypes to 'List'. 2. Resources = node1,node1,node1,node2,
###      node2,node2. (Would need to know node names for my cluster). 1a. ResourceTypes = Machinefile. 2. Resources = 
###      path to a Machinefile that lists resources available. (MPI Machinefile). Ken can provide an example. PBS will 
###      auto-generate this for you.
###      Try to run the Pi example over multiple nodes.
# Files used to populate broker resources - must be one set per broker host
Resources = machinefile_lower

### MDS: How is this different than specifying CPU in hms.model?
### MDS: Other types of resources: GPU. Maybe large memory nodes or other specific types of CPUs.
# Resource names - must be one per resource file
# Values: CPU
ResourceNames = CPU

### MDS: What do these options do here?
### MDS: Explained in Resources above.
# Resource types - must be one per resource file
# Values: Localhost, Machinefile, List 
ResourceTypes = Machinefile 

### MDS: What is a "Basic" scheduler?
### MDS: Lower-scale jobs are run by HMS directly. 
# Scheduler type
# Values: Basic, PBS
Scheduler = Basic 

### MDS: Do not change this unless changing machines.
# Path to executable that launches broker
StartBrokerPath = /usr/cta/unsupported/hms/ken/hms/bin/StartBroker

### MDS: No other types of brokers at the moment. Threaded broker exists but hasn't been pushed.
# Type of broker
# Values: Basic
Type = Basic

[Communicator]
### MDS: What is the previous line for?

### MDS: What are the different options here?
### MDS: How data is sent from upper-scale model to broker. 
### MDS: TCPIPSocket is typically used. They should all work.
# Type of communicator used to communicate between algorithm, broker,
# and adaptive sampling
# Values: UnixSocket, TCPIPSocket, MPI
Type = TCPIPSocket 

### MDS: What is the pointing to?
### MDS: Only if UnixSocket is being used.
# Unix Socket File Name
UnixSocketFileName = /tmp/socket_file

[Logging]
### MDS: What is the previous line for?
### MDS: HMS has a debug logging capability. Turned off on the current build. Slows things down.

### MDS: What is "Logging level"?
### MDS: Disabled in the current version.
# Logging level
# Values: Trace, Debug, Info, Warning, Error, Fatal
Level = Debug

### MDS: What does this log file contain?
### MDS: Probably not generating this log file because the system is disabled.
# Logging file
File = /tmp/hms.log



